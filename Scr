#!/bin/bash

input="file.csv"
row=0

# Use awk to properly handle CSV quoting and multi-line users
awk -F',' 'NR>1 {
    row++
    # field 7 = users, field 5 = childgroup
    users=$7
    gsub(/"/,"",users)       # remove quotes
    gsub(/\r/,"",users)      # remove CR if Windows file
    file="users_"$5".txt"    # childgroup-based filename
    print users > file
}' "$input"


#!/bin/bash

csv_file="file.csv"

row=1
while IFS= read -r line; do
    # Skip header
    if [ $row -eq 1 ]; then
        row=$((row+1))
        continue
    fi

    # Extract childgroup (5th field) safely
    childgroup=$(echo "$line" | awk -F',' '{print $5}')

    # Extract everything after the 7th column start till end of quotes
    users=$(echo "$line" | cut -d',' -f7- | sed 's/^"//; s/"$//')

    echo "Row $row -> ChildGroup: $childgroup"
    echo "Users raw:"
    echo "$users"
    echo "------------------------"

    row=$((row+1))
done < "$csv_file"


#!/bin/bash

input="yourfile.csv"

current_file=""

# Skip header (if first line has column names)
tail -n +2 "$input" | while IFS=',' read -r childgroup users; do
    
    # If new childgroup is found, switch to new file
    if [[ -n "$childgroup" ]]; then
        current_file="${childgroup}.txt"
        echo "Switching to file: $current_file"
        > "$current_file"   # clear file before writing
    fi

    # Only write users if a file is set
    if [[ -n "$current_file" && -n "$users" ]]; then
        IFS=';' read -ra userlist <<< "$users"
        for u in "${userlist[@]}"; do
            echo "$u" >> "$current_file"
        done
    fi
done

